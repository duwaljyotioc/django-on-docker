version: '3.8'


networks:
  application:
    driver: bridge
  redis-net:

services:
  web:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev

  redis:
    image: redis
    container_name: app_redis
    command: redis-server
    ports:
      - "6380:6379"
    networks:
      - application
      - redis-net

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile  # Use your Celery Dockerfile
    volumes:
      - ./app/:/usr/src/app/
    env_file: .env
    command: celery -A <project_name> worker -l info
    container_name: app_celery_worker
    depends_on:
      - web  # Ensure that the API service is running before Celery Worker starts
      - redis
    networks:
      - application
      - redis-net

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile  # Use your Celery Dockerfile
    volumes:
      - ./app/:/usr/src/app/
    env_file: .env
    command: celery -A <project_name> beat -l info
    container_name: app_celery_beat
    depends_on:
      - web  # Ensure that the API service is running before Celery Beat starts
      - redis
    networks:
      - application
      - redis-net

volumes:
  postgres_data:
